plugins {
    id "org.springframework.boot" version "2.4.3"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "org.liquibase.gradle" version "2.0.4"
}

group = "com.high"
version = "0.0.1"
sourceCompatibility = "1.8"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

liquibase {
    activities {
        main{
            driver "com.mysql.jdbc.Driver"
            url "jdbc:mysql://localhost:3306/high_blog_db"
            username "root"
            password "r00t"
            changeLogFile "src/main/resources/config/liquibase_ext/master.xml"
            referenceUrl "hibernate:spring:com.ert.fasttrade.warehouse.domain?dialect=org.hibernate.dialect.MySQL5InnoDBDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
            defaultSchemaName "high_blog_db"
            logLevel "debug"
            classpath "src/main/resources/"
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework.boot:spring-boot-starter-reactor-netty"
    implementation "org.springframework:spring-messaging"
    implementation "org.springframework.security:spring-security-messaging"
    implementation "mysql:mysql-connector-java:${mysql_connector_java_version}"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    implementation "org.liquibase:liquibase-core:${liquid_base_core_version}"
    implementation "io.jsonwebtoken:jjwt:${jjwt_version}"
    implementation "io.springfox:springfox-boot-starter:${spring_fox_boot_starter_version}"
    implementation "io.springfox:springfox-swagger-ui:${spring_fox_swagger_ui_version}"
    implementation "commons-io:commons-io:${commons_io_version}"
    implementation "org.apache.commons:commons-lang3:${commons_lang3_version}"
    implementation "org.apache.commons:commons-collections4:${commons_collections4_version}"
    implementation "com.paypal.sdk:checkout-sdk:${paypal_checkout_sdk_version}"
    implementation "com.paypal.sdk:payouts-sdk:${paypal_payout_sdk_version}"
    implementation "org.json:json:${org_json_version}"

    liquibaseRuntime "org.liquibase:liquibase-core:${liquid_base_core_version}"
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:2.0.1')
    liquibaseRuntime('org.liquibase.ext:liquibase-hibernate5:3.6')
    liquibaseRuntime "mysql:mysql-connector-java:${mysql_connector_java_version}"
    liquibaseRuntime('org.springframework.boot:spring-boot-starter-data-jpa')
    liquibaseRuntime files("/config/liquibase_ext/master.xml")

    compileOnly "org.projectlombok:lombok"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

test {
    useJUnitPlatform()
}
